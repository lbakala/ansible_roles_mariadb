---
- name: create base mysql home dir
  file:
    path: '{{ base_dir }}'
    state: directory
    owner: mysql
    group: mysql
    mode: 0770

- name: create base dir directory content
  file:
    path: '{{ base_dir }}/{{ item }}'
    state: directory
    owner: mysql
    group: mysql
    mode: 0770
  with_items:
    - 'log'
    - 'db'
    - 'conf.d'
    - 'scripts'

- name: mysql limit
  lineinfile:
    path: /lib/systemd/system/mariadb.service
    regexp: "{{ item.find_string }}"
    line: "{{ item.replace_by }}"
    owner: root
    group: root
    mode: '0644'
    backrefs: yes
  with_items:
    - { find_string: "^LimitNOFILE", replace_by: "LimitNOFILE=infinity" }
    - { find_string: "^ProtectHome=", replace_by: "ProtectHome=false" }
    - { find_string: "^ExecStartPre=/usr/bin/install", replace_by: "ExecStartPre=/usr/bin/install -m 770 -o mysql -g mysql -d /var/run/mysqld" }

- name: mariadb.service.d
  file:
    path: "/etc/systemd/system/mariadb.service.d"
    state: directory
    mode: '0644'

- name: mariadb.service.d
  template:
    src: 'etc/systemd/system/mariadb.service.d/mariadb.service.j2'
    dest: '/etc/systemd/system/mariadb.service.d/mariadb.service.conf'
    owner: root
    group: root
    mode: 0755

- name: Copy my.cnf global MySQL configuration
  template:
    src: etc/mysql/my.cnf.j2
    dest: '/etc/mysql/my.cnf'
    owner: root
    group: root
    mode: 0644

- name: Count files in /data/db
  find:
    path: /home/mysql/db
    patterns: '*'
  register: db_files

- name: "Run mysql_install_db only if is empty"
  command: mysql_install_db --datadir=/home/mysql/db
  when: db_files.matched|int == 0

- name: Verify mysql pid directory exists
  file:
    path: '{{ mysql_pid_file | dirname }}'
    state: directory
    owner: mysql
    group: mysql
    mode: 0755

- name: Grant privilege to mysql group
  template:
    src: etc/sudoers.d/mysql.j2
    dest: /etc/sudoers.d/00-dbamysql
    owner: root
    group: root
    mode: 0644

- file: dest=/home/mysql owner=mysql group=mysql mode=u=rwX,g=rwX,o= recurse=yes

- name: swappiness
  sysctl:
    name: vm.swappiness
    value: "{{mariadb_swappiness}}"
    state: present
  when: mariadb_swappiness is defined

- name: "starting mariadb server"
  systemd:
    name: mysql
    daemon_reload: yes
    state: restarted
    enabled: yes

- name: set acl on mysl data dir
  acl:
    path: '{{ mysql_datadir }}'
    etype: group
    entity: mysql
    permissions: rwx
    state: present
    recursive: yes

